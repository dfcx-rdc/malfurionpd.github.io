<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on adeng&#39;s blog</title>
    <link>http://blog.adenghub.club/post/</link>
    <description>Recent content in Posts on adeng&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 31 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://blog.adenghub.club/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rust Web 开发技术栈</title>
      <link>http://blog.adenghub.club/p/rust-web-%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E6%A0%88/</link>
      <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.adenghub.club/p/rust-web-%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E6%A0%88/</guid>
      <description>awesome-rust
https://sergey-melnychuk.github.io/2019/08/01/rust-mio-tcp-server/
Network programming Tokio Tokio 官网
Tokio 中文文档
tokio
MIO https://github.com/tokio-rs/mio
Low-level TCP server in Rust with MIO
Web Rocket Rocket
actix-web actix-web
hyper hyper
ORM diesel diesel 官网
diesel github
sqlx sqlx github</description>
    </item>
    
    <item>
      <title>Rust编程之道读书笔记</title>
      <link>http://blog.adenghub.club/p/rust%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%81%93%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.adenghub.club/p/rust%E7%BC%96%E7%A8%8B%E4%B9%8B%E9%81%93%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</guid>
      <description>第一章 新时代的语言 不谋全局者，不足谋一域。为了达成目标， Rust语言遵循了三条设计哲学:
*内存安全
*零成本 抽象
*实用性
像 CIC++语言的类型系统 就不是类型安全的，因为它 们并没有对 无意义 的行为进行 约束。一个最简单 的例子就 是数组 越界，在 CIC++语言中并不对其做任何检查，导致发生了语 言规范规定之外的行为，也就是 未定义行为 (Undefined Behavior)。
C++中的RAII机制 Resource Acquisition Is Initialization
LLVM https://www.jianshu.com/p/1367dad95445
在进一步学习之前，我们有必要了解一下 Rust代码是如何执行的。 Rust是跨平台语言， 一次编译，到处运行，这得益于 LLVM。 Rust编译器是一个 LLVM 编译前端，它将代码编译 为 LLVMIR， 然后经过 LLVM 编译为相应的平台目标 。
Rust 源码经过分词和解析，生成 AST C抽象语法树)。 然后把 AST 进一步简化处理为 HIR CHigh-level IR)，目的是让编译器更方便地做类型检 查。 HIR 会进一步被编译为 MIR (MiddleIR)，这是一种中间表示，它在 Rustl.12版本中被引入， 主要用于以下目的。
.缩短编译时间 。 MIR 可以帮助实现增量编译，当你修改完代码重新编译的时候 ， 编译 器只 计 算更改过的部分，从而缩短了编译时间 。</description>
    </item>
    
    <item>
      <title>VSCode spring开发环境配置</title>
      <link>http://blog.adenghub.club/p/vscode-spring%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.adenghub.club/p/vscode-spring%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
      <description>Atom One Dark Theme
Atom One Light Theme
Java Extension Pack v0.17.0
安装此插件时会同时安装下列关联插件： - Language Support for Java(TM) by Red Hat - Java Extension Pack - Java Test Runner - Maven for Java
 
Spring Boot Extension Pack v0.0.8
安装此插件时会同时安装下列关联插件：
- Spring Boot Tools - Cloudfoundry Manifest YML Support - Concourse CI Pipeline Editor - Spring Initializr Java Support
 image-20210628092526766 
debug好像使用的默认 java版本
mac java版本切换
https://blog.csdn.net/u010324331/article/details/105441518</description>
    </item>
    
    <item>
      <title>Rust开发环境搭建</title>
      <link>http://blog.adenghub.club/p/rust%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Thu, 29 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.adenghub.club/p/rust%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
      <description>初步认识 拜读了大佬关于Rust的这篇博客 RUST语言的编程范式，对这门语言有了大致的认识。没有GC，强大的编译检查，基本上来说，一旦编译通过，代码运行起来是安全的，bug也是很少的。
 如果你对Rust的概念认识的不完整，你完全写不出程序，那怕就是很简单的一段代码。
 感觉还是很有必要得着，搭个环境感受下。
直接参考 官网入门 。
安装 笔者在mac上执行安装命令：
$ curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh info: downloading installer Welcome to Rust! This will download and install the official compiler for the Rust programming language, and its package manager, Cargo. Rustup metadata and toolchains will be installed into the Rustup home directory, located at: /Users/adeng/.rustup This can be modified with the RUSTUP_HOME environment variable. The Cargo home directory located at: /Users/adeng/.</description>
    </item>
    
    <item>
      <title>Mermaid简介</title>
      <link>http://blog.adenghub.club/p/mermaid%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Wed, 21 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.adenghub.club/p/mermaid%E7%AE%80%E4%BB%8B/</guid>
      <description>1 简介 Mermaid 可以让你使用文本和代码来创建图表和可视化呈现
 如果你熟悉Markdown那么你学习 Mermaid&amp;rsquo;s Syntax 完全没问题。
 Mermaid增强了Markdown图表的表现力，对习惯Markdown格式写文档的同学来说多么令人激动啊。
它是一个JS库，可以配合Hugo使用，使用方式请参考 这篇小文 。
下面对语法做简单点介绍，详细文档请参考 Mermaid官网 。
2 图表语法 2.1 流程图 Flowchart //todo
2.2 时序图 Sequence Diagram //todo
2.3 类图 Class Diagram //todo
2.4 状态图 State Diagram //todo
2.5 实体关系图 Entity Relationship Diagram 实体关系模型（或ER模型）描述了特定知识领域中相互关联的相关事物
2.6 日程表 User Journey //todo
2.7 甘特图 Gannt //todo
2.8 饼图 Pie Chart //todo</description>
    </item>
    
    <item>
      <title>使用Hugo和Github Pages搭建博客</title>
      <link>http://blog.adenghub.club/p/%E4%BD%BF%E7%94%A8hugo%E5%92%8Cgithub-pages%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Fri, 12 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>http://blog.adenghub.club/p/%E4%BD%BF%E7%94%A8hugo%E5%92%8Cgithub-pages%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>本文即是本站的搭建方式。
目前Github Pages还挺稳定，托管起来也比较省心。
Github Pages 仓库新建 按照 Github Pages官网 说明，新建一个和github用户名一样的Repo，格式为 username.github.io。
 image-20210312135040716 
Hugo 安装 参考 Hugo官网 本地安装hugo，笔者Mac使用brew安装:
$ brew install hugo ··· $ hugo version Hugo Static Site Generator v0.80.0/extended darwin/amd64 BuildDate: unknown Site 初始化 ## 新建hugo站点 $ hugo new site malfurionpd.github.io $ cd malfurionpd.github.io ## 初始化git库 $ echo &amp;quot;# malfurionpd.github.io&amp;quot; &amp;gt;&amp;gt; README.md $ git init $ git add README.md $ git commit -m &amp;quot;first commit&amp;quot; $ git branch -M main $ git remote add origin git@github.</description>
    </item>
    
    <item>
      <title>Chinese Test</title>
      <link>http://blog.adenghub.club/p/test-chinese/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>http://blog.adenghub.club/p/test-chinese/</guid>
      <description>正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。
奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。
引用  思念是最暖的忧伤像一双翅膀
让我停不了飞不远在过往游荡
不告而别的你 就算为了我着想
这么沉痛的呵护 我怎么能翱翔
最暖的憂傷 - 田馥甄
 图片  Photo by Florian Klauer on Unsplash   Photo by Luca Bravo on Unsplash</description>
    </item>
    
    <item>
      <title>Markdown Syntax Guide</title>
      <link>http://blog.adenghub.club/p/markdown-syntax-guide/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://blog.adenghub.club/p/markdown-syntax-guide/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Placeholder Text</title>
      <link>http://blog.adenghub.club/p/placeholder-text/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://blog.adenghub.club/p/placeholder-text/</guid>
      <description>&lt;p&gt;Lorem est tota propiore conpellat pectoribus de pectora summo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Math Typesetting</title>
      <link>http://blog.adenghub.club/p/math-typesetting/</link>
      <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://blog.adenghub.club/p/math-typesetting/</guid>
      <description>&lt;p&gt;Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emoji Support</title>
      <link>http://blog.adenghub.club/p/emoji-support/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://blog.adenghub.club/p/emoji-support/</guid>
      <description>&lt;p&gt;Emoji can be enabled in a Hugo project in a number of ways.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jenkins 初探</title>
      <link>http://blog.adenghub.club/p/jenkins-%E5%88%9D%E6%8E%A2/</link>
      <pubDate>Wed, 04 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://blog.adenghub.club/p/jenkins-%E5%88%9D%E6%8E%A2/</guid>
      <description>缘由 本来尝试DockerFile加DaoCloud搞定持续集成的，发现还是很多地方绕不开，比如Docker镜像构建速度，Play项目构建时依赖解析速度，可视化等等，开始重新考虑Jenkins。
之前对Jenkins印象不好估计是受UI影响了，这次打开官网，Blue Ocean眼前一亮啊，兴致大起。
 Blue Ocean1.png 
 Blue Ocean2.png 
安装 直接docker走起。
docker pull jenkins 这里Mac用户推荐用Docker官网的dmg安装，配合DaoCloud的加速器，镜像下载速度飞起。
#运行
docker run -d -p 49001:8080 -v /Users/xxx/Documents/Docker/Volume/Jenkins:/var/jenkins_home -t jenkins 启动后访问 http://localhost:49001/ 会要求输入secrets token。
 Secrets.png 
可以在本地Volume里找到，也可以进入镜像查看。
docker exec -it 4b7112ec2f2c /bin/sh cat /var/jenkins_home/secrets/initialAdminPassword 输入后，开始初始化，安装默认Plugins。
 Plugins.png 
然后添加一个Admin账号，就进入控制台了。
 Console.png</description>
    </item>
    
  </channel>
</rss>
